services:
  # Frontend React Application
  frontend:
    build: ./frontend
    ports:
      - "13001:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - REACT_APP_API_URL=http://localhost:18080
      - REACT_APP_WS_URL=ws://localhost:18080/ws
    depends_on:
      - backend
    networks:
      - wafermaps-network

  # Backend FastAPI Application
  backend:
    build: ./backend
    ports:
      - "18080:8000"
    volumes:
      - ./backend:/app
    environment:
      - DATABASE_URL=postgresql://wafermaps_user:wafermaps_password@postgres:5432/wafermaps_db
      - REDIS_URL=redis://redis:6379
      - MINIO_URL=http://minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - SECRET_KEY=your-super-secret-key-change-in-production
      - ENVIRONMENT=development
    depends_on:
      - postgres
      - redis
      - minio
    networks:
      - wafermaps-network

  # PostgreSQL Database
  postgres:
    image: postgres:15
    environment:
      - POSTGRES_DB=wafermaps_db
      - POSTGRES_USER=wafermaps_user
      - POSTGRES_PASSWORD=wafermaps_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    ports:
      - "5433:5432"
    networks:
      - wafermaps-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    networks:
      - wafermaps-network

  # MinIO Object Storage
  minio:
    image: minio/minio
    ports:
      - "9002:9000"
      - "9003:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - wafermaps-network

  # Nginx API Gateway (for production-like setup)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - frontend
      - backend
    networks:
      - wafermaps-network

volumes:
  postgres_data:
  redis_data:
  minio_data:

networks:
  wafermaps-network:
    driver: bridge
